{
	"info": {
		"_postman_id": "511427eb-dc62-48b3-9d25-3a305822be34",
		"name": "test crud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22812164"
	},
	"item": [
		{
			"name": "usuarios",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Payload must be valid and have a body\", function () { \r",
							"     pm.response.to.be.ok; // equivalente a decir que valide que sea 200\r",
							"     pm.response.to.be.withBody; // body tiene que exitir\r",
							"     pm.response.to.be.json; // además que sea un JSON válido\r",
							"});\r",
							"\r",
							"// Pedimos a nuestro response payload que tengo Content-Type en el header\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"// Y comprobamos que la petición se haya servido en un determinado tiempo\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8090/user/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8090",
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Payload must be valid and have a body\", function () { \r",
							"     pm.response.to.be.ok; \r",
							"     pm.response.to.be.withBody; \r",
							"     pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.identificacion).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.nombre).to.be.an(\"string\");\r",
							"  pm.expect(jsonData.telefono).to.be.an(\"string\");\r",
							"  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8090/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8090",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "insertar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"create a new order\", function () { \r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"     \r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.identificacion).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.nombre).to.be.an(\"string\");\r",
							"  pm.expect(jsonData.telefono).to.be.an(\"string\");\r",
							"  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain;charset=UTF-8",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"nicolas\",\r\n    \"identificacion\": \"888893\",\r\n    \"telefono\": \"88854\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8090/user/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8090",
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"create a new order\", function () { \r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"     \r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.identificacion).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.nombre).to.be.an(\"string\");\r",
							"  pm.expect(jsonData.telefono).to.be.an(\"string\");\r",
							"  \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":\"5\",\r\n    \"nombre\": \"nicolas\",\r\n    \"identificacion\": \"888893\",\r\n    \"telefono\": \"88854\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8090/user/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8090",
					"path": [
						"user",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "eliminar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"delete an order\", function () { \r",
							"    pm.response.to.not.be.error;\r",
							"    \r",
							"     \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8090/user/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8090",
					"path": [
						"user",
						"5"
					]
				}
			},
			"response": []
		}
	]
}